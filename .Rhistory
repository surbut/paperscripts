anti.htn.mat[i, k] = f$coefficients["antihtn_now"]
statin.mat[i, k] = f$coefficients["statin_now"]
}
}
}
}
}
for (i in 1:length(ages)) {
age = ages[i]
agename = as.character(age)
for (j in 1:length(nstates)) {
print(agename)
start = nstates[[j]]
print(start)
f = abinom$model_list[[agename]][['Cad']][[start]]
nar = abinom$events[, "Cad", j]
print(nar)
if (length(f) < 2) {
print("condition1")
} else{
if (nar < 10) {
year.mat[i, j] = NA
prs.mat[i, j] = NA
int.mat[i, j] = NA
anti.htn.mat[i, k] = NA
statin.mat[i, k] = NA
}
else{
year.mat[i, j] = f$coefficients["yearsinstate"]
prs.mat[i, j] = f$coefficients["cad.prs"]
int.mat[i, j] = f$coefficients["(Intercept)"]
anti.htn.mat[i, k] = f$coefficients["antihtn_now"]
statin.mat[i, k] = f$coefficients["statin_now"]
}
}
}
}
for (i in 1:length(ages)) {
age = ages[i]
agename = as.character(age)
for (j in 1:length(nstates)) {
print(agename)
start = nstates[[j]]
print(start)
f = abinom$model_list[[agename]][['Cad']][[start]]
nar = abinom$events[i, "Cad", j]
print(nar)
if (length(f) < 2) {
print("condition1")
} else{
if (nar < 10) {
year.mat[i, j] = NA
prs.mat[i, j] = NA
int.mat[i, j] = NA
anti.htn.mat[i, k] = NA
statin.mat[i, k] = NA
}
else{
year.mat[i, j] = f$coefficients["yearsinstate"]
prs.mat[i, j] = f$coefficients["cad.prs"]
int.mat[i, j] = f$coefficients["(Intercept)"]
anti.htn.mat[i, k] = f$coefficients["antihtn_now"]
statin.mat[i, k] = f$coefficients["statin_now"]
}
}
}
}
for (i in 1:length(ages)) {
age = ages[i]
agename = as.character(age)
for (j in 1:length(nstates)) {
print(agename)
start = nstates[[j]]
print(start)
f = abinom$model_list[[agename]][['Cad']][[start]]
nar = abinom$events[i, "Cad", j]
print(nar)
if (length(f) < 2) {
print("condition1")
} else{
if (nar < 10) {
year.mat[i, j] = NA
prs.mat[i, j] = NA
int.mat[i, j] = NA
anti.htn.mat[i, k] = NA
statin.mat[i, k] = NA
}
else{
year.mat[i, j] = f$coefficients["yearsinstate"]
prs.mat[i, j] = f$coefficients["cad.prs"]
int.mat[i, j] = f$coefficients["(Intercept)"]
anti.htn.mat[i, j] = f$coefficients["antihtn_now"]
statin.mat[i, j] = f$coefficients["statin_now"]
}
}
}
}
year.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
prs.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
int.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
statin.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
anti.htn.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
names(year.mat)=names(prs.mat)=states
for (i in 1:length(ages)) {
age = ages[i]
agename = as.character(age)
for (j in 1:length(nstates)) {
print(agename)
start = nstates[[j]]
print(start)
f = abinom$model_list[[agename]][['Cad']][[start]]
nar = abinom$events[i, "Cad", j]
print(nar)
if (length(f) < 2) {
print("condition1")
} else{
if (nar < 10) {
year.mat[i, j] = NA
prs.mat[i, j] = NA
int.mat[i, j] = NA
anti.htn.mat[i, j] = NA
statin.mat[i, j] = NA
}
else{
year.mat[i, j] = f$coefficients["yearsinstate"]
prs.mat[i, j] = f$coefficients["cad.prs"]
int.mat[i, j] = f$coefficients["(Intercept)"]
anti.htn.mat[i, j] = f$coefficients["antihtn_now"]
statin.mat[i, j] = f$coefficients["statin_now"]
}
}
}
}
int.mat
exp(int.mat)
exp(year.mat)
exp(statin.mat)
matplot(round(exp(statin.mat))
)
summary(round(exp(statin.mat)))
colnames(statin.mat)=nstates
head(statin.mat)
head(anti.htn.mat)
summary(anti.htn.mat)
summary(exp(anti.htn.mat))
summary(exp(prs.mat))
exp(int.mat)
year.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
prs.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
int.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
statin.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
anti.htn.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
names(year.mat)=names(prs.mat)=names(int.mat)=names(statin.mat)=names(anti.htn.mat)=nstates
head(year.mat)
year.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
prs.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
int.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
statin.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
anti.htn.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
names(year.mat)=names(prs.mat)=names(int.mat)=names(statin.mat)=names(anti.htn.mat)=nstates
rownames(year.mat)=rownames(prs.mat)=rownames(int.mat)=rownames(statin.mat)=rownames(anti.htn.mat)=ages
for (i in 1:length(ages)) {
age = ages[i]
agename = as.character(age)
for (j in 1:length(nstates)) {
print(agename)
start = nstates[[j]]
print(start)
f = abinom$model_list[[agename]][['Cad']][[start]]
nar = abinom$events[i, "Cad", j]
print(nar)
if (length(f) < 2) {
print("condition1")
} else{
if (nar < 10) {
year.mat[i, j] = NA
prs.mat[i, j] = NA
int.mat[i, j] = NA
anti.htn.mat[i, j] = NA
statin.mat[i, j] = NA
}
else{
year.mat[i, j] = f$coefficients["yearsinstate"]
prs.mat[i, j] = f$coefficients["cad.prs"]
int.mat[i, j] = f$coefficients["(Intercept)"]
anti.htn.mat[i, j] = f$coefficients["antihtn_now"]
statin.mat[i, j] = f$coefficients["statin_now"]
}
}
}
}
ey=exp(year.mat)
ep=exp(prs.mat)
eah=exp(anti.htn.mat)
esm=exp(statin.mat)
head(eah)
eah
year.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
prs.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
int.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
statin.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
anti.htn.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
names(year.mat)=names(prs.mat)=names(int.mat)=names(statin.mat)=names(anti.htn.mat)=nstates
rownames(year.mat)=rownames(prs.mat)=rownames(int.mat)=rownames(statin.mat)=rownames(anti.htn.mat)=ages
for (i in 1:length(ages)) {
age = ages[i]
agename = as.character(age)
for (j in 1:length(nstates)) {
print(agename)
start = nstates[[j]]
print(start)
f = abinom$model_list[[agename]][['Cad']][[start]]
nar = abinom$events[i, "Cad", j]
print(nar)
if (length(f) < 2) {
print("condition1")
} else{
if (nar < 10) {
year.mat[i, j] = NA
prs.mat[i, j] = NA
int.mat[i, j] = NA
anti.htn.mat[i, j] = NA
statin.mat[i, j] = NA
}
else{
year.mat[i, j] = f$coefficients["yearsinstate"]
prs.mat[i, j] = f$coefficients["cad.prs"]
int.mat[i, j] = f$coefficients["(Intercept)"]
anti.htn.mat[i, j] = f$coefficients["antihtn_now"]
statin.mat[i, j] = f$coefficients["statin_now"]
}
}
}
}
ey=exp(year.mat)
ep=exp(prs.mat)
eah=exp(anti.htn.mat)
esm=exp(statin.mat)
ey
year.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
prs.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
int.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
statin.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
anti.htn.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
for (i in 1:length(ages)) {
age = ages[i]
agename = as.character(age)
for (j in 1:length(nstates)) {
print(agename)
start = nstates[[j]]
print(start)
f = abinom$model_list[[agename]][['Cad']][[start]]
nar = abinom$events[i, "Cad", j]
print(nar)
if (length(f) < 2) {
print("condition1")
} else{
if (nar < 10) {
year.mat[i, j] = NA
prs.mat[i, j] = NA
int.mat[i, j] = NA
anti.htn.mat[i, j] = NA
statin.mat[i, j] = NA
}
else{
year.mat[i, j] = f$coefficients["yearsinstate"]
prs.mat[i, j] = f$coefficients["cad.prs"]
int.mat[i, j] = f$coefficients["(Intercept)"]
anti.htn.mat[i, j] = f$coefficients["antihtn_now"]
statin.mat[i, j] = f$coefficients["statin_now"]
}
}
}
}
names(year.mat)=names(prs.mat)=names(int.mat)=names(statin.mat)=names(anti.htn.mat)=nstates
rownames(year.mat)=rownames(prs.mat)=rownames(int.mat)=rownames(statin.mat)=rownames(anti.htn.mat)=ages
head(year.mat)
prs.mat
dim(prs.mat)
dim(prs.mat)
prs.mat
year.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
prs.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
int.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
statin.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
anti.htn.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
for (i in 1:length(ages)) {
age = ages[i]
agename = as.character(age)
for (j in 1:length(nstates)) {
print(agename)
start = nstates[[j]]
print(start)
f = abinom$model_list[[agename]][['Cad']][[start]]
nar = abinom$events[i, "Cad", j]
print(nar)
if (length(f) < 2) {
print("condition1")
} else{
if (nar < 10) {
year.mat[i, j] = NA
prs.mat[i, j] = NA
int.mat[i, j] = NA
anti.htn.mat[i, j] = NA
statin.mat[i, j] = NA
}
else{
year.mat[i, j] = f$coefficients["yearsinstate"]
prs.mat[i, j] = f$coefficients["cad.prs"]
int.mat[i, j] = f$coefficients["(Intercept)"]
anti.htn.mat[i, j] = f$coefficients["antihtn_now"]
statin.mat[i, j] = f$coefficients["statin_now"]
}
}
}
}
names(year.mat)=names(prs.mat)=names(int.mat)=names(statin.mat)=names(anti.htn.mat)=nstates
rownames(year.mat)=rownames(prs.mat)=rownames(int.mat)=rownames(statin.mat)=rownames(anti.htn.mat)=ages
prs.mat
nstates
ages
class(year.mat)
year.mat=data.frame(NA,nrow=length(ages),ncol=length(nstates))
year.mat=data.frame(NA,nrow=length(ages),ncol=length(nstates))
prs.mat=data.frame(NA,nrow=length(ages),ncol=length(nstates))
int.mat=data.frame(NA,nrow=length(ages),ncol=length(nstates))
statin.mat=data.frame(NA,nrow=length(ages),ncol=length(nstates))
anti.htn.mat=data.frame(NA,nrow=length(ages),ncol=length(nstates))
for (i in 1:length(ages)) {
age = ages[i]
agename = as.character(age)
for (j in 1:length(nstates)) {
print(agename)
start = nstates[[j]]
print(start)
f = abinom$model_list[[agename]][['Cad']][[start]]
nar = abinom$events[i, "Cad", j]
print(nar)
if (length(f) < 2) {
print("condition1")
} else{
if (nar < 10) {
year.mat[i, j] = NA
prs.mat[i, j] = NA
int.mat[i, j] = NA
anti.htn.mat[i, j] = NA
statin.mat[i, j] = NA
}
else{
year.mat[i, j] = f$coefficients["yearsinstate"]
prs.mat[i, j] = f$coefficients["cad.prs"]
int.mat[i, j] = f$coefficients["(Intercept)"]
anti.htn.mat[i, j] = f$coefficients["antihtn_now"]
statin.mat[i, j] = f$coefficients["statin_now"]
}
}
}
}
names(year.mat)=names(prs.mat)=names(int.mat)=names(statin.mat)=names(anti.htn.mat)=nstates
rownames(year.mat)=rownames(prs.mat)=rownames(int.mat)=rownames(statin.mat)=rownames(anti.htn.mat)=ages
year.mat=data.frame(NA,nrow=length(ages),ncol=length(nstates))
year.mat
year.mat=data.frame(year.mat)
prs.mat=data.frame(prs.mat)
int.mat=data.frame(int.mat)
statin.mat=data.frame(statin.mat)
anti.htn.mat=data.frame(anti.htn.mat)
names(year.mat)=names(prs.mat)=names(int.mat)=names(statin.mat)=names(anti.htn.mat)=nstates
rownames(year.mat)=rownames(prs.mat)=rownames(int.mat)=rownames(statin.mat)=rownames(anti.htn.mat)=ages
load("~/Dropbox (Personal)//pheno_dir/output/merged_pheno_censor_final_withdrugs.rds")
nstates=c("Health", "Ht","HyperLip","Dm","Cad","death","Ht&HyperLip","HyperLip&Dm","Ht&Dm","Ht&HyperLip&Dm")
dfh=data.table(dfh)
ages=c(20:80)
abinom = fitfunc(df_frame = dfh,
ages = ages,
nstates = nstates,mode = "binomial",covariates = "cad.prs+yearsinstate+statin_now+antihtn_now")
year.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
prs.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
int.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
statin.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
anti.htn.mat=matrix(NA,nrow=length(ages),ncol=length(nstates))
for (i in 1:length(ages)) {
age = ages[i]
agename = as.character(age)
for (j in 1:length(nstates)) {
print(agename)
start = nstates[[j]]
print(start)
f = abinom$model_list[[agename]][['Cad']][[start]]
nar = abinom$events[i, "Cad", j]
print(nar)
if (length(f) < 2) {
print("condition1")
} else{
if (nar < 10) {
year.mat[i, j] = NA
prs.mat[i, j] = NA
int.mat[i, j] = NA
anti.htn.mat[i, j] = NA
statin.mat[i, j] = NA
}
else{
year.mat[i, j] = f$coefficients["yearsinstate"]
prs.mat[i, j] = f$coefficients["cad.prs"]
int.mat[i, j] = f$coefficients["(Intercept)"]
anti.htn.mat[i, j] = f$coefficients["antihtn_now"]
statin.mat[i, j] = f$coefficients["statin_now"]
}
}
}
}
year.mat=data.frame(year.mat)
prs.mat=data.frame(prs.mat)
int.mat=data.frame(int.mat)
statin.mat=data.frame(statin.mat)
anti.htn.mat=data.frame(anti.htn.mat)
names(year.mat)=names(prs.mat)=names(int.mat)=names(statin.mat)=names(anti.htn.mat)=nstates
rownames(year.mat)=rownames(prs.mat)=rownames(int.mat)=rownames(statin.mat)=rownames(anti.htn.mat)=ages
year.mat
source("~/multistate/code/fitarray.R")
matplot(exp(year.mat)/(1+exp(year.mat)))
matplot(exp(year.mat)/(1+exp(year.mat)),ylim=c(0.3,0.55))
hex(exp(year.mat))
exp(year.mat)
year.mat
matplot((exp(int.mat)/(1+exp(int.mat)))*1000,ylim=c(0.3,0.55))
matplot((exp(int.mat)/(1+exp(int.mat)))*1000)
round(exp(int.mat)/(1+exp(int.mat)))*1000,2)
round(exp(int.mat)/(1+exp(int.mat))*1000,2)
round(exp(int.mat)/(1+exp(int.mat))*100,2)
matplot(log(round(exp(int.mat)/(1+exp(int.mat))*100,2)))
matplot(log(round(exp(int.mat)/(1+exp(int.mat)),2)))
barplot(abinom$events[,"Cad",])
barplot(int.mat)
barplot(as.matrix(exp(int.mat)))
exp(int.mat)
barplot(exp(int.mat)/(1+exp(int.mat))*100,2))
barplot(exp(int.mat)/(1+exp(int.mat))*100,2)
barplot(as.matrix(exp(int.mat)/(1+exp(int.mat))*100,2))
plot(int.mat[,1])
plot(exp(int.mat[,1])/(1+exp(int.mat[,1]))
)
par(mfrow=c(3,3))
for(i in c(1:4,7:10){
plot(exp(int.mat[,1])/(1+exp(int.mat[,1])))
title(paste0("Predicted Base transitions from",nstates[i],"toCAD"))}
round(exp(int.mat)/(1+exp(int.mat))*100,2)
par(mfrow=c(3,3))
for(i in c(1:4,7:10)){
plot(exp(int.mat[,1])/(1+exp(int.mat[,1])))
title(paste0("Predicted Base transitions from",nstates[i],"toCAD"))
}
round(exp(int.mat)/(1+exp(int.mat))*100,2)
par(mfrow=c(3,3))
for(i in c(1:4,7:10)){
plot(exp(int.mat[,i])/(1+exp(int.mat[,i])))
title(paste0("Predicted Base transitions from",nstates[i],"toCAD"))
}
## risk per 1000, baseline
round(exp(int.mat)/(1+exp(int.mat))*100,2)
par(mfrow=c(3,3))
for(i in c(1:4,7:10)){
plot(exp(int.mat[,i])/(1+exp(int.mat[,i])),ylab="Probability of Transition to CAD",xlab="Age",xaxt="n")
axis(1, at=1:61, labels=ages)
title(paste0("Predicted Base transitions from",nstates[i],"toCAD"))
}
for(i in c(1:4,7:10)){
plot(exp(int.mat[,i])/(1+exp(int.mat[,i])),ylab="Probability of Transition to CAD",xlab="Age",xaxt="n",pch=19,col=i)
axis(1, at=1:61, labels=ages)
title(paste0("Predicted Base transitions from",nstates[i],"toCAD"))
}
par(mfrow=c(3,3))
mar(c)
for(i in c(1:4,7:10)){
plot(exp(anti.htn.mat[,i]),ylab="OR tans CAD",xlab="Age",xaxt="n",pch=19,col=i)
axis(1, at=1:61, labels=ages)
title(paste0("OR of med",nstates[i],"toCAD"))
}
par(mfrow=c(3,3))
for(i in c(1:4,7:10)){
plot(exp(anti.htn.mat[,i]),ylab="OR tans CAD",xlab="Age",xaxt="n",pch=19,col=i)
axis(1, at=1:61, labels=ages)
title(paste0("OR of med",nstates[i],"toCAD"))
}
anti.htn.mat
for(i in c(2:4,7:10)){
plot(exp(anti.htn.mat[,i]),ylab="OR tans CAD",xlab="Age",xaxt="n",pch=19,col=i)
axis(1, at=1:61, labels=ages)
title(paste0("OR of med",nstates[i],"toCAD"))
}
par(mfrow=c(3,3))
for(i in c(2:4,7:10)){
plot(exp(statin.mat[,i]),ylab="OR St CAD",xlab="Age",xaxt="n",pch=19,col=i)
axis(1, at=1:61, labels=ages)
title(paste0("OR Sta",nstates[i],"toCAD"))
}
par(mfrow=c(3,3))
for(i in c(2:4,7:10)){
plot(exp(year.mat[,i]),ylab="OR YIS",xlab="Age",xaxt="n",pch=19,col=i)
axis(1, at=1:61, labels=ages)
title(paste0("OR YIS",nstates[i],"toCAD"))
}
par(mfrow=c(3,3))
for(i in c(2:4,7:10)){
plot(exp(prs.mat[,i]),ylab="OR YIS",xlab="Age",xaxt="n",pch=19,col=i)
axis(1, at=1:61, labels=ages)
title(paste0("OR YIS",nstates[i],"toCAD"))
}
round(exp(statin.mat),2)
round(exp(statin.mat[,-1]),2)
round(exp(anit.htn.mat[,-1]),2)
round(exp(anti.htn.mat[,-1]),2)
